{"version":3,"sources":["containers/Homepage.module.css","components/DialogBox.module.css","components/Summary.js","components/TotalConfirmed.js","components/TotalDeaths.js","components/TotalRecovered.js","components/DialogBox.js","containers/Homepage.js","components/footer.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Summary","props","style","fontSize","color","summary","cases","deaths","recovered","TotalConfirmed","onClick","clicked","cursor","borderBottom","padding","name","totalCases","TotalDeaths","totalDeaths","totalRecovered","Transition","React","forwardRef","ref","Slide","direction","AlertDialogSlide","Dialog","open","test","TransitionComponent","keepMounted","onClose","close","aria-labelledby","aria-describedby","DialogTitle","className","classes","id","data","country","DialogContent","DialogContentText","newCases","newDeaths","activeCases","seriousCases","DialogActions","Button","Homepage","checkDataForThisCountry","countryData","state","breakdown","filter","element","setState","show","closeDialogBox","dataReceived","axios","get","then","res","catch","err","console","log","confirmedCasesByCountry","Grid","container","spacing","alignItems","justify","height","item","xs","CircularProgress","totalDeathsByCountrySorted","totalRecoveredByCountrySorted","this","slice","map","key","sort","a","b","parseFloat","TotalRecovered","flexGrow","backgroundColor","margin","items","marginRight","href","size","variant","target","Paper","PaperSummary","elevation","listStyleType","PaperRight","Component","Footer","currentYear","Date","getFullYear","root","footerText","sm","white","listStyle","fontWeight","flexContainer","justifyContent","verticalAlign","subFooter","Typography","component","withStyles","marginTop","borderTop","paddingTop","overflowX","footerSections","lineHeight","invertedBtnDark","border","boxShadow","display","header","AppBar","position","Toolbar","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.696dc0c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Homepage_Paper__1KBlI\",\"PaperSummary\":\"Homepage_PaperSummary__1V0kV\",\"PaperRight\":\"Homepage_PaperRight__2_GRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogTitle\":\"DialogBox_DialogTitle__2ajPF\",\"DialogContent\":\"DialogBox_DialogContent__3MLCK\"};","import React from \"react\";\n\nconst Summary = props => {\n  return (\n    <div>\n     \n      <p>\n        Total confirmed:{\" \"}\n        <span style={{ fontSize: \"30px\", color: \"red\" }}>\n          {props.summary.cases}\n        </span>\n      </p>\n      <p>\n        Total deaths:{\" \"}\n        <span style={{ fontSize: \"30px\"}}>\n          {props.summary.deaths}\n        </span>\n      </p>\n      <p>\n        Total Recovered:{\" \"}\n        <span style={{ fontSize: \"30px\",  color: \"#80ff00\"  }}>\n          {props.summary.recovered}\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default Summary;\n","import React from \"react\";\n\nconst TotalConfirmed = props => {\n  return (\n    <li\n      onClick={props.clicked}\n      style={{\n        cursor: \"pointer\",\n        borderBottom: \"1px solid white\",\n        padding: \"5px\"\n      }}\n    >\n      {props.name}: <span style={{ color: \"red\" }}>{props.totalCases}</span>\n    </li>\n  );\n};\n\nexport default TotalConfirmed;\n","import React from \"react\";\n\nconst TotalDeaths = props => {\n  return (\n    <li onClick={props.clicked} style={{cursor: \"pointer\", borderBottom: \"1px solid white\", padding: \"5px\" }}>\n      {props.name}: {props.totalDeaths}\n    </li>\n  );\n};\n\nexport default TotalDeaths;\n","import React from \"react\";\n\nconst TotalDeaths = props => {\n  return (\n    <li onClick={props.clicked} style={{ cursor: \"pointer\", borderBottom: \"1px solid white\", padding: \"5px\" }}>\n      {props.name}:{\" \"}\n      <span style={{ color: \"#80ff00\" }}> {props.totalRecovered} </span>\n    </li>\n  );\n};\n\nexport default TotalDeaths;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport classes from \"./DialogBox.module.css\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide(props) {\n  return (\n    <div>\n      <Dialog\n        open={props.test}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={props.close}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle\n          className={classes.DialogTitle}\n          id=\"alert-dialog-slide-title\"\n        >\n          {props.data.country}'s coronavirus complete breakdown:\n        </DialogTitle>\n        <DialogContent className={classes.DialogContent}>\n          <DialogContentText\n            color=\"inherit\"\n            id=\"alert-dialog-slide-description\"\n          >\n            <span>\n              <strong>Total number of all cases: </strong>\n              {props.data.totalCases}\n            </span>\n            <br></br>\n            <span>\n              <strong>Total number of new cases: </strong>\n              {props.data.newCases}\n            </span>\n            <br></br>\n            <span>\n              <strong>Total number of deaths: </strong>\n              {props.data.totalDeaths}\n            </span>\n\n            <br></br>\n            <span>\n              <strong>Total number of recent deaths:</strong>\n              {props.data.newDeaths}\n            </span>\n            <br></br>\n            <span>\n              <strong>Total recovered:</strong>\n              {props.data.totalRecovered}\n            </span>\n            <br></br>\n            <span>\n              <strong>Number of active cases:</strong>\n              {props.data.activeCases}\n            </span>\n            <br></br>\n            <span>\n              <strong>Number of serious cases:</strong>\n              {props.data.seriousCases}\n            </span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions className={classes.DialogContent}>\n          <Button onClick={props.close} color=\"secondary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport Summary from \"../components/Summary\";\nimport TotalConfirmed from \"../components/TotalConfirmed\";\nimport TotalDeaths from \"../components/TotalDeaths\";\nimport TotalRecovered from \"../components/TotalRecovered\";\nimport AlertDialogSlide from \"../components/DialogBox\";\nimport classes from \"./Homepage.module.css\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      show: false,\n      dataReceived: false,\n      countryData: {}\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://cors-anywhere.herokuapp.com/https://us-central1-alex-redwood.cloudfunctions.net/coronavirus-api-master\"\n      )\n      .then(res => {\n        this.setState({ data: res.data, dataReceived: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  checkDataForThisCountry = name => {\n    const countryData = this.state.data.breakdown.filter(element => {\n      return element.country === name;\n    });\n    this.setState({ show: true, countryData: countryData[0] });\n  };\n\n  closeDialogBox = () => {\n    this.setState({ show: false });\n  };\n\n  render() {\n    let confirmedCasesByCountry = (\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"500px\" }}\n      >\n        <Grid item xs={3}>\n          <CircularProgress />\n        </Grid>\n      </Grid>\n    );\n    let totalDeathsByCountrySorted = (\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"770px\" }}\n      >\n        <Grid item xs={3}>\n          <CircularProgress />\n        </Grid>\n      </Grid>\n    );\n    let totalRecoveredByCountrySorted = (\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"770px\" }}\n      >\n        <Grid item xs={3}>\n          <CircularProgress />\n        </Grid>\n      </Grid>\n    );\n    let summary = (\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"200px\" }}\n      >\n        <Grid item xs={3}>\n          <CircularProgress />\n        </Grid>\n      </Grid>\n    );\n\n    if (this.state.dataReceived === true) {\n      summary = <Summary summary={this.state.data.summary}></Summary>;\n\n      confirmedCasesByCountry = [...this.state.data.breakdown];\n      confirmedCasesByCountry = confirmedCasesByCountry\n        .slice(0, 20)\n        .map(country => {\n          return (\n            <TotalConfirmed\n              key={country.country}\n              clicked={() => this.checkDataForThisCountry(country.country)}\n              name={country.country}\n              totalCases={country.totalCases}\n            ></TotalConfirmed>\n          );\n        });\n\n      totalDeathsByCountrySorted = [...this.state.data.breakdown];\n      totalDeathsByCountrySorted = totalDeathsByCountrySorted\n        .sort((a, b) => parseFloat(b.totalDeaths) - parseFloat(a.totalDeaths))\n        .slice(1, 30)\n        .map(country => {\n          return (\n            <TotalDeaths\n            clicked={() => this.checkDataForThisCountry(country.country)}\n              name={country.country}\n              totalDeaths={country.totalDeaths}\n            ></TotalDeaths>\n          );\n        });\n\n      totalRecoveredByCountrySorted = [...this.state.data.breakdown];\n      totalRecoveredByCountrySorted = totalRecoveredByCountrySorted\n        .sort(\n          (a, b) => parseFloat(b.totalRecovered) - parseFloat(a.totalRecovered)\n        )\n        .slice(1, 30)\n        .map(country => {\n          return (\n            <TotalRecovered\n            clicked={() => this.checkDataForThisCountry(country.country)}\n              name={country.country}\n              totalRecovered={country.totalRecovered}\n            ></TotalRecovered>\n          );\n        });\n    }\n\n    return (\n      <div>\n        <Grid container style={{ flexGrow: \"1\" }} spacing={2}>\n          <Grid\n            style={{\n              backgroundColor: \"#777B88\",\n              margin: \"20px auto\",\n              padding: \"20px\"\n            }}\n            items\n            xs={10}\n          >\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n            >\n              <p style={{ marginRight: \"50px\", color: \"white\" }}>\n                Special Thanks to{\" \"}\n                <strong>www.worldometers.info/coronavirus/</strong> for\n                providing the data!\n              </p>\n              <Button\n                href=\"https://www.heraldsun.com.au/lifestyle/health/coronavirus-survival-guide-how-to-protect-yourself/news-story/2cdefa3c0ccdf5e4972c44177c925505\"\n                style={{ marginRight: \"20px\" }}\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                target=\"_blank\"\n              >\n                Survival Guide\n              </Button>\n              <Button\n                href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n                style={{ marginRight: \"20px\" }}\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                target=\"_blank\"\n              >\n                Latest News\n              </Button>\n              <Button\n                href=\"https://people.com/health/coronavirus-ways-to-help-your-community/\"\n                style={{ marginRight: \"20px\" }}\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                target=\"_blank\"\n              >\n                Help your community\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\" spacing={3}>\n              <Grid item>\n                <Paper\n                  style={{ backgroundColor: \"#330033\", color: \"white\" }}\n                  className={classes.PaperSummary}\n                  elevation={3}\n                >\n                  <h3>Summary</h3>\n                  {summary}\n                </Paper>\n                <Paper\n                  className={classes.Paper}\n                  style={{ backgroundColor: \"#330033\", color: \"white\" }}\n                  elevation={3}\n                >\n                  <h3>Confirmed cases:</h3>\n                  <ul\n                    style={{\n                      listStyleType: \"none\",\n                      margin: \"auto\",\n                      padding: \"0\",\n                      color: \"white\"\n                    }}\n                  >\n                    {confirmedCasesByCountry}\n                  </ul>\n                </Paper>\n              </Grid>\n\n              <Grid item>\n                <Paper\n                  style={{ backgroundColor: \"#330033\" }}\n                  className={classes.PaperRight}\n                  elevation={3}\n                >\n                  <ul\n                    style={{\n                      listStyleType: \"none\",\n                      margin: \"auto\",\n                      padding: \"0\",\n                      color: \"white\"\n                    }}\n                  >\n                    <h3>Total Deaths:</h3>\n                    {totalDeathsByCountrySorted}\n                  </ul>\n                </Paper>\n              </Grid>\n\n              <Grid item>\n                <Paper\n                  style={{ backgroundColor: \"#330033\", color: \"white\" }}\n                  className={classes.PaperRight}\n                  elevation={3}\n                >\n                  <h3 style={{ color: \"#80ff00\" }}>Total Recovered:</h3>\n                  <ul\n                    style={{\n                      listStyleType: \"none\",\n                      margin: \"auto\",\n                      padding: \"0\",\n                      color: \"white\"\n                    }}\n                  >\n                    {totalRecoveredByCountrySorted}\n                  </ul>\n                </Paper>\n              </Grid>\n              <AlertDialogSlide\n                close={this.closeDialogBox}\n                test={this.state.show}\n                data={this.state.countryData}\n              ></AlertDialogSlide>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n","import Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport FreeBreakfast from \"@material-ui/icons/FreeBreakfast\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Email from \"@material-ui/icons/Email\";\nimport PeopleOutlined from \"@material-ui/icons/PeopleOutline\";\nimport Language from \"@material-ui/icons/Language\";\n\nclass Footer extends Component {\n  render() {\n    const { classes } = this.props;\n    const currentYear = new Date().getFullYear();\n    return (\n      <div className={classes.root}>\n        <Grid className={classes.footerText} container spacing={0}>\n          <Grid item xs={12} sm={4}>\n            <div className={classes.white}>\n              <ul style={{ listStyle: \"none\", margin: 0 }}>\n                <li>\n                  <span\n                    style={{\n                      fontSize: \"25px\",\n                      color: \"#CCFFCC\",\n                      fontWeight: \"bolder\"\n                    }}\n                  >\n                    Details:\n                  </span>\n                </li>\n                <li>\n                  A web application built using React, Node.js and Material-UI\n                  that tracks the latest status and news about the coronavirus.\n                </li>\n              </ul>\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Grid container>\n              <Grid\n                className={classes.flexContainer}\n                style={{ justifyContent: \"center\" }}\n                item\n                xs={12}\n              ></Grid>\n              <Grid\n                className={classes.flexContainer}\n                style={{ justifyContent: \"flex-end\" }}\n                item\n                xs={6}\n              ></Grid>\n              <Grid className={classes.flexContainer} item xs={6}></Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <ul style={{ listStyle: \"none\", margin: 0 }}>\n              <li>\n                <span\n                  style={{\n                    fontSize: \"25px\",\n                    color: \"#CCFFCC\",\n                    fontWeight: \"bolder\"\n                  }}\n                >\n                  Info:\n                </span>\n              </li>\n              <li>\n                <FreeBreakfast style={{ verticalAlign: \"-5px\" }} /> &nbsp; John\n                Cervantes\n              </li>\n              <li>\n                <Phone style={{ verticalAlign: \"-5px\" }} /> &nbsp; +1\n                773-812-6322\n              </li>\n              <li>\n                <Email style={{ verticalAlign: \"-5px\" }} /> &nbsp;\n                <a\n                  style={{ color: \"white\" }}\n                  href=\"mailto:johncervantes@protonmail.com\"\n                  target=\"_blank\"\n                >\n                  johncervantes@protonmail.com\n                </a>\n              </li>\n              <li>\n                <PeopleOutlined style={{ verticalAlign: \"-5px\" }} /> &nbsp;\n                <a\n                  style={{ color: \"white\" }}\n                  href=\"https://www.linkedin.com/in/j-cervantes/\"\n                  target=\"_blank\"\n                >\n                  www.linkedin.com/in/j-cervantes/\n                </a>\n              </li>\n              <li>\n                <Language style={{ verticalAlign: \"-5px\" }} /> &nbsp;\n                <a\n                  style={{ color: \"white\" }}\n                  href=\"https://www.badseal.com\"\n                  target=\"_blank\"\n                >\n                  www.badseal.com\n                </a>\n              </li>\n            </ul>\n          </Grid>\n        </Grid>\n        <Grid className={classes.subFooter} item xs={12}>\n          <Typography\n            className={classes.white}\n            variant=\"subheading\"\n            component={\"span\"}\n          >\n            © {currentYear} Bad Seal Studios\n          </Typography>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst styles = () => ({\n  root: {\n    marginTop: 30,\n    backgroundColor: \"#0099CC\",\n    borderTop: \"solid 3px #998643\",\n    paddingTop: \"16px\",\n    overflowX: \"hidden\"\n  },\n  footerSections: {\n    margin: \"0 16px\"\n  },\n  subFooter: {\n    backgroundColor: \"#66CCFF\",\n    padding: \"8px 16px 8px 16px\",\n    marginTop: \"40px\"\n  },\n  footerText: {\n    color: \"#fff\",\n    lineHeight: 1.5\n  },\n  invertedBtnDark: {\n    color: \"#fff\",\n    backgroundColor: \"transparent\",\n    border: \"2px #fff solid\",\n    boxShadow: \"none\",\n    margin: \"8px\"\n  },\n  white: {\n    color: \"#ffffff\"\n  },\n  flexContainer: {\n    display: \"flex\"\n  }\n});\n\nexport default withStyles(styles)(Footer);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst header = () => {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"title\" color=\"inherit\">\n            Bad Seal Studios - Coronavirus - Stats Tracking\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default header;\n","import React from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./containers/Homepage\";\nimport Footer from \"./components/footer\";\nimport Header from \"./components/header\";\n\nfunction App() {\n  return (\n    <div className=\"App Site\">\n      <div className=\"Site-content\">\n        <Header></Header>\n        <Homepage></Homepage>\n      </div>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}